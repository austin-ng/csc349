Austin Ng
CSC 349 Assignment 6
A) ValWIS(tasks) will return the list of jobs that result in the highest total value of compatible tasks.
B) ValWIS(n) = max{ValWIS(n-1), ValWIS(last compatible job) + weight(n); ValWIS(0) = 0; ValWIS(1) = weight(first job)
C) The table will have 5 rows and n columns (n is the amount of jobs). The five rows will indicate the index of the job, the starting time of the job, the finish time of the job, the weight of the job, and the maximum weight up until that job.
D) ValWIS(jobs) // jobs is an array of jobs with start, end, and weight
	sort(jobs) //sort jobs by finish times
	table = []; //create array of solutions of subproblems
	table[0] = weight of jobs[0]

	// fill table
	for i in range (1,len(jobs)):
		curWeight = weight of jobs[i]
		l = index of latest nonconflicting job
		if l exists
			curWeight += table[l]
		// store max of including and excluding
		table[i] = max(curWeight, table[i-1])

	return table[n - 1] //return last element which is the solution
E) traceback(table)
	order = []
	curMax = weight of table[n]
	for i = n down to 1
		if table[i] == table[i - 1] or curMax > table[i]
			skip to next element
		else
			add i to table
			curMax = weight of table[i]
	return reverse(order) // reverse it so its loweset to highest
F) O(n^2)
